name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Login to Amazon ECR
        id: login-ecr  # Add id to capture the output
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}  # Correct output reference
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: pythonapp  # Your ECR repository name
        run: |
          echo "ECR_REGISTRY: $ECR_REGISTRY"
          echo "REPOSITORY: $REPOSITORY"
          echo "IMAGE_TAG: $IMAGE_TAG"
          docker build -t "$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" .
          docker push "$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG"

      - name: Update and deploy ECS task definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: pyhtonapp-task-definition.json
          container-name: pythonapp
          image: ${{ steps.build-image.outputs.image }}
          
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}  # Corrected reference
          service: pythonapp-service
          cluster: PythonAppCluster
          wait-for-service-stability: true

